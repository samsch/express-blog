module.exports = {
  // This is the session key, used to sign session tokens.
  // This needs to be a long, cryptographically secure random string.
  // In Linux, you can generate such a string with:
  // `cat /dev/urandom | env LC_CTYPE=C tr -dc _A-Za-z0-9 | head -c${1:-64}`
  secret: "my long secret string",
  
  // http port
  port: "3000",

  //  HTTPS config
  // For development, you can generate a self-signed cert using:
  // `openssl req -x509 -newkey rsa:2048 -sha256 -nodes -keyout tls/key.pem -out tls/cert.pem -days 365`.
  // For production, you can use the free https://letsencrypt.org/ service to obtain a cert and key file,
  // or get them from other services.
  // If you don't define securePort, the app will be served over http only, but you could also provide
  // tls/https by using a proxy server. This is actually recommended by some.

  securePort: "3001",

  // key and cert paths, absolute or relative to server/.
  tlsKey: "../tls/key.pem",
  tlsCert: "../tls/cert.pem",

  // Postgres connection details
  pgconnection: {
    database: "",
    user: "",
    password: "",
  },
}
